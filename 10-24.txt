回顾：
		json = { name1:value1,name2:value2 }
		for (var name in json){ alert(json[name]) }

--------------------------------------------------------------

***eval json 的时候会出错,加一个()就ok了   是为了让它成为对象 ，eval本身的问题，由于json是以{}的方式开始结束的，在js中它会被当成一个语句块来处理，所以必须强制转换一个表达式
加上圆括号的目的是迫使eval函数在处理js代码的时候强制将括号内的表达式转换成对象，而不是语句处理


一般配合循环使用比较多：
	break：中断终止当前程序；
	continue：跳过当前程序，后面代码继续执行

开启JS严格模式："use strict"
	干掉了with()
	声明变量必须加var
	for(){},if(){}里面不能再定义函数

	坏处 ：不兼容

select :
	oS.option 获取到所有的option
	oS.selectedIndex 当前选中那项的索引值

动态添加一项option
	new Option('文本值','value值')
添加：
	oS.option.add(newOption)
删除：
	oS.opiton.remove(要删除那项的索引)

js组成部分  兼容性问题
	ECMAScript:解释器  语法
	DOM ：broswer object model 浏览器对象模型
	DOM : document object model 文档对象模型 大部分兼容 不兼容有解决办法

window.open('url','打开方式'): chrome 火狐处于用户体验考虑，会阻止自动打开的页面， iE自动打开

window.close()  关闭窗口  chrome直接关闭 火狐没反应 IE有提示



about : blank 新空白页面

**所有的方法都是属于windown 下面的

|| : 从左往右看，遇到真的就不在往后看，否则会一直往后找；如果都是假的，取最后一个值；


不是学完dom之后前面获取的方法就不能用了

空格也算文本元素

DOM 关系:
	子元素：
		父级.children  只获取子元素，不包含非子元素的元素返回的是一组多个元素

	父元素：
		子级.parentNode

	下一个兄弟节点
		obj.nextSibling 高版本浏览器会自动识别空格 IE8--正常
		obj.nextElementSibling高版本正常 IE8 报undefined

	上一个兄弟节点：
		obj.previousSibling 高版本浏览器会识别空格，IE8--正常
		obj.previousSibling 高版本正常 IE8--undefined

	第一个子元素：
		父级.firstChild  高版本浏览器会识别空格 ie8 正常
		父级.firstElementChild 高版本正常 iE8  undefined

	最后一个子元素
		父级.lastChild 高版本浏览器会识别空格 iE8正常
		父级.lastElementChild 高版本正常 ie8 undefined











